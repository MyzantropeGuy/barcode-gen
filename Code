<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Расширенный Генератор Штрихкодов</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bwip-js@2.0.11/dist/bwip-js.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <style>
        .form-control.w-30, .form-select.w-30, .btn.w-30 {
            width: 30%!important;
        }
        .btn-custom {
            width: auto;
            padding: 5px 10px;
        }
        .barcode-canvas {
            width: 150%; /* Увеличиваем ширину на 50% */
            height: auto;
        }
        .col-md-2 {
            margin-right: 50px; /* Добавляем расстояние между штрих-кодами по ширине */
        }
        .text-input {
            width: 150%; /* Увеличиваем ширину поля ввода над штрих-кодом */
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center">Расширенный Генератор Штрихкодов</h1>
        <div class="row">
            <div class="col-md-6">
                <form id="barcode-form" class="mt-4">
                    <div class="mb-3">
                        <label for="barcode-text" class="form-label">Текст для штрихкода</label>
                        <textarea id="barcode-text" class="form-control w-30" rows="3" placeholder="Введите один или несколько текстов, каждый с новой строки" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="barcode-type" class="form-label">Тип штрихкода</label>
                        <select id="barcode-type" class="form-select w-30">
                            <option value="code128">Code 128</option>
                            <option value="ean13">EAN-13</option>
                            <option value="upc">UPC</option>
                            <option value="datamatrix">DataMatrix</option>
                            <option value="qrcode">QR Code</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="barcode-width" class="form-label">Ширина (пиксели)</label>
                        <input type="number" id="barcode-width" class="form-control w-30" value="200" required>
                    </div>
                    <div class="mb-3">
                        <label for="barcode-height" class="form-label">Высота (пиксели)</label>
                        <input type="number" id="barcode-height" class="form-control w-30" value="50" required>
                    </div>
                    <div class="mb-3">
                        <label for="barcode-scale" class="form-label">Масштаб</label>
                        <input type="number" id="barcode-scale" class="form-control w-30" value="1" required>
                    </div>
                    <div class="mb-3">
                        <label for="font-select" class="form-label">Шрифт текста</label>
                        <select id="font-select" class="form-select w-30">
                            <option value="Arial">Arial</option>
                            <option value="Courier New">Courier New</option>
                            <option value="Times New Roman">Times New Roman</option>
                            <option value="Verdana">Verdana</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="font-size" class="form-label">Размер шрифта</label>
                        <input type="number" id="font-size" class="form-control w-30" value="18">
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="bold-text" checked>
                        <label class="form-check-label" for="bold-text">Жирный текст</label>
                    </div>
                    <button type="button" id="generate-button" class="btn btn-primary btn-custom">Сгенерировать</button>
                    <button type="button" id="download-button" class="btn btn-secondary btn-custom mt-2">Скачать PDF</button>
                </form>
            </div>
            <div class="col-md-6">
                <div id="barcode-results" class="row mt-4"></div>
            </div>
        </div>
    </div>

    <script>
        const generateButton = document.getElementById('generate-button');
        const downloadButton = document.getElementById('download-button');
        const resultsDiv = document.getElementById('barcode-results');
        
        generateButton.addEventListener('click', function() {
            const texts = document.getElementById('barcode-text').value.split('\n');
            const type = document.getElementById('barcode-type').value;
            const width = parseInt(document.getElementById('barcode-width').value, 10) || 200;
            const height = parseInt(document.getElementById('barcode-height').value, 10) || 50;
            const scale = parseInt(document.getElementById('barcode-scale').value, 10) || 1;
            const font = document.getElementById('font-select').value;
            const fontSize = parseInt(document.getElementById('font-size').value, 10) || 18;
            const isBold = document.getElementById('bold-text').checked;

            resultsDiv.innerHTML = ''; // Очистить предыдущие результаты

            texts.forEach((text, index) => {
                const colDiv = document.createElement('div');
                colDiv.className = 'col-md-2 mb-4';  // Используем колонки для размещения в несколько столбцов

                const wrapper = document.createElement('div');
                wrapper.className = 'text-center';
                
                const input = document.createElement('input');
                input.type = 'text';
                input.placeholder = 'Введите текст';
                input.className = 'form-control mb-2 w-300 text-input';
                input.value = text.trim(); // Автозаполнение текста
                wrapper.appendChild(input);

                const canvas = document.createElement('canvas');
                canvas.id = `barcode-canvas-${index}`;
                canvas.width = width;
                canvas.height = height;
                canvas.className = 'barcode-canvas';
                wrapper.appendChild(canvas);

                colDiv.appendChild(wrapper);
                resultsDiv.appendChild(colDiv);

                bwipjs.toCanvas(canvas, {
                    bcid: type, // Тип штрихкода
                    text: text.trim(), // Текст для кодирования
                    includetext: true, // Отображение текста под штрихкодом
                    scale: scale, // Масштаб
                    height: height // Высота штрихкода
                }, function (err) {
                    if (err) {
                        alert(`Ошибка при генерации штрихкода для текста "${text}": ${err}`);
                    }
                });

                // Автоматическое обновление текста сверху и снизу
                input.addEventListener('input', () => {
                    const ctx = canvas.getContext('2d');
                    const x = canvas.width / 2;

                    // Текст сверху
                    ctx.clearRect(0, 0, canvas.width, 20);
                    ctx.font = `${isBold ? 'bold' : ''} ${fontSize}px ${font}`;
                    ctx.textAlign = 'center';
                    ctx.fillText(input.value, x, 15);

                    // Текст снизу
                    ctx.clearRect(0, canvas.height - 20, canvas.width, 20);
                    ctx.save();
                    ctx.translate(x, canvas.height - 15);
                    ctx.rotate(Math.PI);
                    ctx.fillText(input.value, 0, 0);
                    ctx.restore();
                });

                // Триггерим событие input, чтобы текст сразу отобразился
                input.dispatchEvent(new Event('input'));
            });
        });

        downloadButton.addEventListener('click', function() {
            const { jsPDF } = window.jspdf;
            const pdf = new jsPDF();
            const canvases = resultsDiv.getElementsByTagName('canvas');

            const margin = 10;
            const pageWidth = pdf.internal.pageSize.getWidth();
            const pageHeight = pdf.internal.pageSize.getHeight();
            const cols = 4;
            const rows = 4;
            const barcodeWidth = (pageWidth - (cols + 1) * margin) / cols;
            let barcodesOnPage = 0;

            let x = margin;
            let y = margin;

            Array.from(canvases).forEach((canvas, index) => {
                if (barcodesOnPage >= cols * rows) {
                    pdf.addPage();
                    x = margin;
                    y = margin;
                    barcodesOnPage = 0;
                }

                const imgData = canvas.toDataURL('image/png');
                const aspectRatio = canvas.width / canvas.height;
                const imgHeight = barcodeWidth / aspectRatio;

                if (barcodesOnPage % cols === 0 && barcodesOnPage !== 0) {
                    y += imgHeight + margin;
                    x = margin;
                }

                pdf.addImage(imgData, 'PNG', x, y, barcodeWidth, imgHeight);
                x += barcodeWidth + margin;
                barcodesOnPage++;
            });

            pdf.save('barcodes.pdf');
        });
    </script>
</body>
</html>
